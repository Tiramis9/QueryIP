package action

import (
	"github.com/gin-gonic/gin"
	"github.com/sirupsen/logrus"
	"golang_game_merchant/global/status"
	"golang_game_merchant/model"
)

type warningLogReq struct {
	Token     int `json:"token"`
	Page      int `json:"page"`
	PageCount int `json:"page_count"`
}

type warningLogRESP struct {
	List  []model.WarnLog `json:"list"`
	Total int             `json:"total"`
}

type warningPolicyReq struct {
	model.WarningPolicy
	Token int
}

// Post: {"page":1,"page_count":3}
func QueryWarningLog(c *gin.Context) {
	merchantID := 1

	var req warningLogReq
	err := c.Bind(&req)
	if err != nil {
		logrus.Errorf("c.Bind(),%v", err)
		RespParamErr(c)
		return
	}

	var resp warningLogRESP
	resp.List, resp.Total, err = model.QueryWarningLog(model.Db, merchantID, req.Page, req.PageCount)
	if err != nil {
		logrus.Errorf("model.QueryWarningLog(),%v", err)
		RespServerErr(c)
		return
	}

	RespJson(c, status.OK, resp)
}

func QueryWarningPolicy(c *gin.Context) {
	var req warningPolicyReq //取token
	err := c.Bind(&req)
	if err != nil {
		logrus.Errorf("c.Bind(),%v", err)
		RespParamErr(c)
		return
	}

	merchantID := 1
	resp, err := model.QueryWarningPolicy(model.Db, merchantID)
	if err != nil {
		RespServerErr(c)
		return
	}

	RespJson(c, status.OK, resp)
}

func ModifyWarningPolicy(c *gin.Context) {
	var req warningPolicyReq //取token
	err := c.Bind(&req)
	if err != nil {
		logrus.Errorf("c.Bind(),%v", err)
		RespParamErr(c)
		return
	}

	//校验参数
	if req.Status != 1 && req.Status != 0 {
		logrus.Errorf("action.ModifyWarningPolicy(),invalid argument 'status'", err)
		RespParamErr(c)
		return
	}

	merchantID := 1

	err = model.ModifyWarningPolicy(model.Db, merchantID, &(req.WarningPolicy))
	if err != nil {
		logrus.Errorf("model.ModifyWarningPolicy(),%v", err)
		RespServerErr(c)
		return
	}

	RespSuccess(c)
}
