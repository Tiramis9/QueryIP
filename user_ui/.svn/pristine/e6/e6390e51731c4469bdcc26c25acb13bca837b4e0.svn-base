package og

import (
	"testing"
)

// test Transaction
/*************测试注单******************************************/
func TestTransactionsInfoTenMin(t *testing.T) {
	const (
		OPERATOR_NAME = "mog074jk"             // X-Operator 经营方代码
		OPERATORKEY   = "D4NDSJujqQwkZvQaadBj" //  X-Key
	)
	data := make(map[string]interface{})
	data["SDate"] = "2018-10-29 17:30:00"
	data["EDate"] = "2018-10-29 17:37:00"
	data["Operator"] = ALLBET_OPERATOR_NAME
	data["key"] = OPERATORKEY
	/***************************可选择参数
	data["provider"] = "og" // 允许值: "og"
	data["playerID"] = "username"
	data["transactionNumber"] = "zkl12345343"
	data["Exact"] =ture		// bool
	*/
	info, err := QueryPutRecord(data)
	if err != nil {
		t.Log("err:", err)
	}
	t.Log(info)
	result, err := QueryPayRecord(data)
	if err != nil {
		t.Log("err:", err)
	}
	t.Log(result)

}

// test 注册
func testRegister(t *testing.T) {
	game, err := GetToken()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(game)
	reg := RegisterReq{
		UserName:  "myuser11117181",
		Country:   "China",
		FullName:  "My User",
		Email:     "myuser123@test.com",
		Language:  "en",
		Birthdate: "1992-02-19",
	}
	err = game.Register(&reg) // ok
	if err != nil {
		t.Fatal(err)
	}

}

// test 注册
func TestAllPlayer(t *testing.T) {
	game, err := GetToken()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(game)
	reg := QueryPlayer{
		Rows: 3,
		Page: 1,
		Sidx: "",
		Sord: "",
	}
	data, err := game.SearchPlayer(&reg) // ok
	if err != nil {
		t.Fatal(err)
	}
	t.Log(data)
}

// test  balance  updata or get
func TestBalance(t *testing.T) {
	game, err := GetToken() //ok
	if err != nil {
		t.Fatal(err)
	}
	game.ProviderId = 1 // 这一步勿忘
	blan := BalanceReq{
		UserName: "myuser123",
	}
	arg, err := game.GetGameBalance(&blan) //ok
	if err != nil {
		t.Fatal(err)
	}
	t.Log(arg)

	blan2 := BalanceReq{
		UserName:   "myuser123",
		Balance:    25,
		Action:     "in",
		TransferId: "zkl12345343",
	}

	upkey, err := game.UpdataGameKey(&blan2) //需要游戏providerId改为1
	if err != nil {
		t.Fatal(err)
	}
	t.Log(upkey)
}

/*****************玩游戏
   providerId 游戏供应商 id : 1
   key 游戏金钥
	  type  产生链接类型预设desktop允许值: "desktop", "mobile"
  *******************************/
func TestPlay(t *testing.T) {
	game, err := GetToken() //ok
	if err != nil {
		t.Fatal(err)
	}
	game.ProviderId = 1
	infoReq := map[string]string{}
	infoReq["username"] = "myuser123"
	game.GameCode = "games"
	key, err := game.GETGameKey(infoReq) //ok
	if err != nil {
		t.Fatal(err)
	}
	t.Log(key)
	gaInfo := make(map[string]interface{})
	gaInfo["providerId"] = game.ProviderId
	gaInfo["key"] = key
	gaInfo["type"] = "desktop"
	url, err := PlayGame(gaInfo) // ok
	if err != nil {
		t.Fatal(err)
	}
	t.Log(url)
}
