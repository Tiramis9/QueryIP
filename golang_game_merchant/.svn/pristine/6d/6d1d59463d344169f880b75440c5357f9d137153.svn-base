package model

import (
	"github.com/jinzhu/gorm"
	"github.com/sirupsen/logrus"
)

//表： merchant_warn_log
type MerchantActive struct {
	Id           int    `json:"id"`
	MerchantId   int    `json:"merchant_id"`
	ActTitle     string `json:"act_title"`
	ActType      int    `json:"act_type"`
	Status       int    `json:"status"`
	StartTime    int64  `json:"start_time"`
	EndTime      int64  `json:"end_time"`
	ResourceWeb  string `json:"resource_web"`
	ResourceWap  string `json:"resource_wap"`
	Content      string `json:"content"`
	JoinLimit    string `json:"join_limit"`
	RewardConfig string `json:"reward_config"`
	RelatedGame  string `json:"related_game"`
	CreateTime   int64  `json:"create_time"`
	UpdateTime   int64  `json:"update_time"`
}

func (m MerchantActive) AddMerchantActivePay(db *gorm.DB) (int, error) {
	if err := db.Create(&m).Error; err != nil {
		logrus.Error(err)
		return 0, err
	}
	return m.Id, nil
}

func GetMerchantActive(db *gorm.DB, id int, merchantId int) (*MerchantActive, error) {
	var m MerchantActive
	if err := db.Table("merchant_active").Where("id=? AND merchant_id=?", id, merchantId).Find(&m).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return nil, nil
		}
		logrus.Error(err)
		return nil, err
	}
	return &m, nil
}
