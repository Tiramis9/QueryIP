package model

import "github.com/jinzhu/gorm"

//表： merchant_warn_log
type WarnLog struct {
	UserName   string `json:"user_name"`
	Content    string `json:"content"`
	CreateTime int64  `json:"create_time"`
	IP         string `json:"ip"`
	Device     int    `json:"device"`
}

//SELECT mwl.content,mwl.create_time,mwl.ip,mwl.device,mwl.merchant_id,u.user_name,u.id FROM merchant_warn_log AS mwl LEFT JOIN user AS u ON mwl.user_id = u.id  WHERE mwl.merchant_id = 1;
func QueryWarningLog(db *gorm.DB, mid int, page, pageCount int) ([]WarnLog, int, error) {

	filter := db.Table(`merchant_warn_log AS mwl
     `).Joins(`LEFT JOIN user AS u ON mwl.user_id = u.id
     `).Select(`u.user_name,mwl.content,mwl.create_time,mwl.ip,mwl.device`).Where

	var count int
	if err := filter(`mwl.merchant_id = ?`, mid).Count(&count).Error; err != nil {
		return nil, 0, err
	}

	var m []WarnLog
	if err := filter(`mwl.merchant_id = ?`, mid).Offset((page - 1) * pageCount).Limit(pageCount).Find(&m).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return nil, 0, nil
		}
		return nil, 0, err
	}
	return m, count, nil
}
