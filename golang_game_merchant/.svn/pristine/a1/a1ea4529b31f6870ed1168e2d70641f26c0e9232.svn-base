package action

import (
	"github.com/gin-gonic/gin"
	"github.com/sirupsen/logrus"
	"golang_game_merchant/global/status"
	"golang_game_merchant/model"
)

//query
type queryEmployeeReq struct {
	Token int `json:"token"`
	model.QueryEmployee
}

//add
type addEmployeeReq struct {
	Token int `json:"token"`
	model.FullEmployee
}

//del
type delEmployeeReq struct {
	Token int `json:"token"`
	Uid int `json:"uid"`
}

//modify
type modifyEmployeeReq struct {
	Token int `json:"token"`
	model.ModifyEmployee
}



func QueryEmployeeInfo(c *gin.Context) {
	var req queryEmployeeReq
	if err := c.Bind(&req); err != nil {
		logrus.Errorf("c.Bind(),%v", err)
		RespParamErr(c)
		return
	}

	merchantID := 1
	resp, err := model.QueryEmployeeInfo(model.Db, merchantID, &(req.QueryEmployee))
	if err != nil {
		logrus.Errorf("model.QueryEmployeeInfo(), %v\n", err)
		RespServerErr(c)
		return
	}

	RespJson(c, status.OK, resp)
}

//add
// POST: {"token":1,"user_name":"5牛","true_name":"王5牛","password":"1234545","role_id":1,"status":1}
func AddEmployeeInfo(c *gin.Context) {
	var req addEmployeeReq
	if err := c.Bind(&req); err != nil {
		logrus.Errorf("c.Bind(),%v", err)
		RespParamErr(c)
	}

	//校验参数,待完善
	if req.UserName == "" || req.TrueName == "" ||  req.Password == "" {
		logrus.Errorf("action.AddEmployeeInfo(), one of argument is invalid")
		RespParamErr(c)
	}

	merchantID:= 1
	err := model.AddEmployeeInfo(model.Db,merchantID,&(req.FullEmployee))
	if err != nil {
		logrus.Errorf("model.AddEmployeeInfo(), %v\n", err)
		RespServerErr(c)
		return
	}

	RespSuccess(c)
}

//del
// POST: {"token":1,"uid":9}
func DelEmployeeInfo(c *gin.Context) {
	var req delEmployeeReq
	if err := c.Bind(&req); err != nil {
		logrus.Errorf("c.Bind(),%v", err)
		RespParamErr(c)
	}

	merchantID:= 1
	err := model.DelEmployeeInfo(model.Db,merchantID,req.Uid)
	if err != nil {
		logrus.Errorf("model.DelEmployeeInfo(), %v\n", err)
		RespServerErr(c)
		return
	}

	RespSuccess(c)
}

//modify
// POST: {"token":1,"user_name":"zhangs","true_name":"张三","status":1,"password":"123334344","salt":"ffff"}
func ModifyEmployeeInfo(c *gin.Context) {
	var req modifyEmployeeReq
	if err := c.Bind(&req); err != nil {
		logrus.Errorf("c.Bind(),%v", err)
		RespParamErr(c)
	}

	//校验参数,待完善
	if req.UserName == "" || req.TrueName == "" ||  req.Password == "" {
		logrus.Errorf("action.ModifyEmployeeInfo(), one of argument is invalid")
		RespParamErr(c)
	}

	merchantID:= 1
	err := model.ModifyEmployeeInfo(model.Db,merchantID,&(req.ModifyEmployee))
	if err != nil {
		logrus.Errorf("model.ModifyEmployeeInfo(), %v\n", err)
		RespServerErr(c)
		return
	}

	RespSuccess(c)
}



