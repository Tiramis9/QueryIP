package model

import (
	"testing"
	"time"
)

func TestGetAgentBrokerageReportList(t *testing.T) {
	db := connectDb()
	defer db.Close()
	params := []interface{}{1, "liul2"}
	list, err := GetAgentBrokerageReportList(db, " And ag.user_name=?", params, 1, 10)
	if err != nil {
		t.Fatal(err)
	}

	for _, m := range list {
		t.Logf("1%#v", m)
	}

	params = []interface{}{1}
	list, err = GetAgentBrokerageReportList(db, "", params, 1, 10)
	if err != nil {
		t.Fatal(err)
	}

	for _, m := range list {
		t.Logf("2%#v", m)
	}
}

func TestUpdateAgentBrokerageReport(t *testing.T) {
	db := connectDb()
	defer db.Close()
	fields := make(map[string]interface{})
	timestamp := time.Now().Unix()
	var abReport AgentBrokerageReport
	abReport.Id = 1
	fields["deal_time"] = timestamp
	fields["org_expense"] = 1000
	fields["brokerage_total"] = 10000
	info, err := abReport.UpdateAgentBrokerageReport(db,1,fields)
	if err != nil {
		t.Fatal(err)
	}

	t.Logf("1%#v", info)
}
