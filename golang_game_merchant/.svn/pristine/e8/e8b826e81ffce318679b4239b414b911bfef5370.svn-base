package action

import (
	"fmt"
	"github.com/gin-gonic/gin"
	"golang_game_merchant/global/status"
	"golang_game_merchant/model"
	"net/http"
	"time"
)

//添加代理域名req
type AgentDomainAddReq struct {
	Domain  string `json:"domain" binding:"required"`
	AgentId int    `json:"agent_id" binding:"required"`
}

type AgentDomainReq struct {
	Id  int  `json:"id" binding:"required"`
}

type AgentDomainListReq struct {
	Id  int  `json:"id" binding:"required"`
}

type AgentDomainListResp struct {
	List []model.AgentDomain `json:"list"`
}

/**
代理域名列表
 */
func AgentDomainList(c *gin.Context){
	//获取商户id
	var data AgentDomainListResp
	var alReq AgentDomainListReq
	c.BindJSON(&alReq)
	merchantId := 1
	//获取列表
	list, err := model.GetAgentDomainList(model.Db, merchantId, alReq.Id)
	if err != nil {
		RespServerErr(c)
		return
	}
	data.List = list
	RespJson(c, status.OK, data)
}

/**
代理添加域名
*/
func AgentDomainAdd(c *gin.Context) {
	var adReq AgentDomainAddReq
	var ad model.AgentDomain
	c.BindJSON(&adReq)
	//merchantId := 1
	timestamp := time.Now().Unix()
	ad.MerchantId = 1
	ad.AgentId = adReq.AgentId
	ad.Domain = adReq.Domain
	ad.CreateTime, ad.UpdateTime = timestamp, timestamp
	fmt.Println(ad)
	_, err := ad.AddAgentDomain(model.Db)
	if err != nil {
		RespServerErr(c)
		return
	}
	RespSuccess(c)
}

/**
删除代理域名
 */
func AgentDomainDel(c *gin.Context) {
	var adReq AgentDomainReq
	var ad model.AgentDomain
	c.BindJSON(&adReq)
	ad.MerchantId = 1
	ad.Id = adReq.Id
	_, err := ad.DelAgentDomain(model.Db)
	if err != nil {
		RespServerErr(c)
		return
	}
	RespSuccess(c)
}

func AgentReportList(c *gin.Context) {
	data := [...]map[string]interface{}{
		{"id": 1, "user_name": "aaabc", "total_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6},
		{"id": 2, "user_name": "cccdf", "total_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6},
	}
	res := gin.H{"code": 1, "data": data, "msg": "ok", "total": 10, "next_page": 2}
	c.JSON(http.StatusOK, res)
}

func SubordinateList(c *gin.Context) {
	data := [...]map[string]interface{}{
		{"id": 1, "user_name": "aaabc", "last_login_time": 1539601066, "reg_time": 1539601066, "device": 1, "source": "http://www.jx550.com/preferential.html", "status": 1},
		{"id": 2, "user_name": "dddfs", "last_login_time": 1539601066, "reg_time": 1539601066, "device": 1, "source": "http://www.jx550.com/preferential.html", "status": 1},
	}
	res := gin.H{"code": 1, "data": data, "msg": "ok", "total": 10, "next_page": 2}
	c.JSON(http.StatusOK, res)
}

func CommissionReport(c *gin.Context) {
	data := [...]map[string]interface{}{
		{"id": 1, "user_id": 1, "start_time": 1539601066, "end_time": 1539601076, "user_name": "aaabc", "effective_member": 20, "total_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6, "org_expense": 2, "brokerage_total": 2},
		{"id": 2, "user_id": 1, "start_time": 1539601066, "end_time": 1539601076, "user_name": "aaabc", "effective_member": 20, "total_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6, "org_expense": 2, "brokerage_total": 2},
	}
	res := gin.H{"code": 1, "data": data, "msg": "ok", "total": 10, "next_page": 2}
	c.JSON(http.StatusOK, res)
}

func CommissionHistory(c *gin.Context) {
	data := [...]map[string]interface{}{
		{"id": 1, "user_id": 1, "start_time": 1539601066, "end_time": 1539601076, "user_name": "aaabc", "effective_member": 20, "total_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6, "org_expense": 2, "brokerage_total": 2},
		{"id": 2, "user_id": 1, "start_time": 1539601066, "end_time": 1539601076, "user_name": "aaabc", "effective_member": 20, "total_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6, "org_expense": 2, "brokerage_total": 2},
	}
	res := gin.H{"code": 1, "data": data, "msg": "ok", "total": 10, "next_page": 2}
	c.JSON(http.StatusOK, res)
}

func AgentCheck(c *gin.Context) {
	data := [...]map[string]interface{}{{"id": 1, "user_name": "ssbv", "true_name": "大娃", "phone": "13111110101", "email": "4344@gmail.com", "reg_time": 1539601066, "remark": "aaa", "qq": 46464454, "skype": "232323", "status": 1}, {"id": 2, "user_name": "ssbv", "true_name": "大娃", "phone": "13111110101", "email": "4344@gmail.com", "reg_time": 1539601066, "remark": "aaa", "qq": 46464454, "skype": "232323", "status": 1}}
	res := gin.H{"code": 1, "data": data, "msg": "ok", "total": 10, "next_page": 2}
	c.JSON(http.StatusOK, res)
}
