package model

import "github.com/jinzhu/gorm"

type QueryEmployee struct {
	Id            int    `json:"id"`
	UserName      string `json:"user_name"`
	TrueName      string `json:"true_name"`
	RoleName      string `json:"role_name"`
	LoginIp       string `json:"login_ip"`
	LastLoginTime int64  `json:"last_login_time"`
	Status        int    `json:"status"`
}

// like: SELECT ma.id,ma.user_name,ma.login_ip,ma.last_login_time,ma.status,mar.role_name FROM merchant_admin AS ma RIGHT JOIN merchant_admin_role AS mar ON ma.merchant_role_id = mar.id WHERE ma.merchant_id = 1;
func QueryEmployeeInfo(db *gorm.DB, req *QueryEmployee, mid int) ([]QueryEmployee, error) {
	whereStr := "ma.merchant_id = ? "
	cond := make([]interface{}, 1)
	cond[0] = mid
	if req.UserName != "" {
		whereStr += " AND ma.user_name = ?"
		cond = append(cond, req.UserName)
	}

	//待明确
	if req.Status != 0 {
		whereStr += " AND ma.status = ?"
		cond = append(cond, req.Status)
	}

	var qeList []QueryEmployee
	if err := db.Table(`merchant_admin AS ma`).Joins(`
		RIGHT JOIN merchant_admin_role AS mar ON ma.merchant_role_id = mar.id
	`).Select(`
		ma.id,ma.user_name,ma.login_ip,ma.last_login_time,ma.status,mar.role_name
	`).Where(whereStr, cond...).Find(&qeList).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return nil, nil
		}
		return nil, err
	}

	return qeList, nil
}
