package action

import (
	"fmt"
	"game2/logic"
	"game2/model"
	"net/http"
	"strconv"

	"game2/service"

	"github.com/gin-gonic/gin"
)

//游戏列表
func GameTypeList(c *gin.Context) {
	var data []interface{}
	gametype_model := model.GameType{}
	ch := make(chan int)
	defer close(ch)
	//获取类型
	merchant_id := 1
	gametypelist := gametype_model.GetGameTypeList(merchant_id)
	fmt.Println(gametypelist)
	//获取列表
	game_model := model.Game{}
	for _, v := range gametypelist {
		go func(ty int) {
			res := game_model.GetGameList(ty)
			arr := map[string]interface{}{}
			arr["list"] = res
			arr["type"] = ty
			data = append(data, arr)
			ch <- 1
		}(v.Type)
	}
	//等待通道数结束
	for i := 0; i < len(gametypelist); i++ {
		<-ch
	}
	fmt.Println(data)
	res := gin.H{"code": 1, "data": data, "msg": "ok"}
	c.JSON(http.StatusOK, res)
}

func GameList(c *gin.Context) {
	var data interface{}
	type_str := c.PostForm("type")
	//转为整形
	ty, err := strconv.Atoi(type_str)
	if err != nil {
		fmt.Println(err)
		res := gin.H{"code": 0, "data": data, "msg": "fail"}
		c.JSON(http.StatusOK, res)
		return
	}
	game_model := model.Game{}
	data = game_model.GetGameList(ty)
	res := gin.H{"code": 1, "data": data, "msg": "ok"}
	c.JSON(http.StatusOK, res)
}

func GameLogin(c *gin.Context) {
	//根据游戏代码选择不同包
	game_code := c.PostForm("game_code")
	token := c.PostForm("token")
	//用户信息
	user_info := map[string]string{}
	map_info := logic.UserInfoByRedis(token)
	user_info["user_name"] = map_info["user_name"].(string)
	user_info["lang"] = map_info["lang"].(string)
	service.GameLogin(c, game_code, user_info)
}
