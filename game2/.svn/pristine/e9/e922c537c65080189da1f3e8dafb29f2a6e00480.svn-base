package router

import (
	"game2/action"
	"game2/api/allbet"
	"encoding/base64"
	"encoding/json"
	"fmt"
	"game2/logic"
	"net/http"
	//"reflect"
	"game2/service"
	//"strconv"
	//"redisclient"

	//"sort"
	"game2/utils"

	"github.com/gin-gonic/gin"
)

const (
	Ver = "v1"
)

var db = make(map[string]string)

func SignCheck() gin.HandlerFunc {
	return func(c *gin.Context) {
		/*var sign_str string
		s, _ := c.MultipartForm()
		strs := []string{}
		//所有表单参数map
		form := s.Value
		sign := c.DefaultPostForm("sign", "")
		fmt.Println("sign,", sign)
		appid := c.DefaultPostForm("appid", "")
		secret := c.DefaultPostForm("secret", "")
		//所传签名为空
		if sign == "" {
			res := gin.H{"code": "0", "msg": utils.ERR_SIGN_ERROR}
			c.JSON(http.StatusOK, res)
			c.Abort()
			return
		}
		if appid == "" {
			res := gin.H{"code": "0", "msg": utils.ERR_APPID_ERROR}
			c.JSON(http.StatusOK, res)
			c.Abort()
			return
		}
		if secret == "" {
			res := gin.H{"code": "0", "msg": utils.ERR_SECRET_ERROR}
			c.JSON(http.StatusOK, res)
			c.Abort()
			return
		}
		//从redis中查询appid与secret是否匹配
		redis_key := "appid_" + appid
		conn := redisclient.Get()
		defer conn.Close()
		secret_str, err := redis.String(conn.Do("GET", redis_key))
		if err != nil || secret != secret_str {
			c.JSON(http.StatusOK, gin.H{"code": "0", "msg": utils.ERR_SECRET_ERROR})
			c.Abort()
			return
		}
		//删除map中的sign,进行签名
		delete(form, "sign")
		for k, _ := range form {
			strs = append(strs, k)
		}
		sort.Strings(strs)
		for _, val := range strs {
			sign_str += val + "=" + form[val][0] + "&"
		}
		//对字符串签名,与sign对比
		sign_s := sign_str[0 : len(sign_str)-1]
		md5_str := utils.Md5V(string(sign_s))
		fmt.Println(md5_str)
		if md5_str != sign {
			res := gin.H{"code": "0", "msg": utils.ERR_SIGN_ERROR}
			c.JSON(http.StatusOK, res)
			c.Abort()
			return
		}
		return*/
		fmt.Println(11)
	}
}

//Token中间件
func TokenRequired() gin.HandlerFunc {
	return func(c *gin.Context) {
		token := c.PostForm("token")
		user_info := logic.UserInfoByRedis(token)
		if user_info == nil {
			c.JSON(http.StatusOK, gin.H{"code": "0", "msg": utils.ERR_AUTH_FAILED})
			c.Abort()
			return
		}
		json_data, err := json.Marshal(user_info)
		if err != nil {
			res := gin.H{"code": 0, "data": nil, "msg": utils.ERR_SYSTEM_ERROR}
			c.JSON(http.StatusOK, res)
			c.Abort()
			return
		}
		//用户信息存在,延长在线时间
		service.RedisSet(token, string(json_data), utils.LOGIN_EXPIRED_TIME)
		userid := user_info["id"]
		user_id_f := userid.(float64)
		user_id := int(user_id_f)
		c.Set("user_id", user_id)
		fmt.Println("TokenRequired")
	}
}

var suc = gin.H{"code": "1", "msg": "ok"}
var err = gin.H{"code": "0", "msg": "fail"}

func SetupRouter() *gin.Engine {
	// Disable Console Color
	// gin.DisableConsoleColor()
	r := gin.Default()

	v1 := r.Group("/" + Ver)

	v1.POST("/website_info", func(c *gin.Context) {
		action.Websiteinfo(c)
	})

	//test
	v1.POST("/testab", func(c *gin.Context) {
		input := map[string]string{"propertyId": "123456", "random": "1520905201", "client": "123456", "token": "7c90f0221bbe"}
		md5key := "jdeFkwjAgmCRdC/hiXbq2dasK4kWEIajgCOcIgCV+KE="
		utils.AbSign(input, md5key)
	})
	//test 3des
	v1.POST("/test3des", func(c *gin.Context) {
		key := []byte("123456789012345678901234")
		result := utils.Encrypt3DES([]byte("hello"), key)

		fmt.Println(base64.StdEncoding.EncodeToString(result))
		origData := utils.Decrypt3DES(result, key)
		fmt.Println(string(origData))
	})

	//test 3des
	v1.POST("/test4", func(c *gin.Context) {
		allbet.Query_agent_handicaps(c)
	})

	//test_create_client
	/*v1.POST("/test_check_or_create", func(c *gin.Context) {
		allbet.Check_or_create(c)
	})*/

	//test_create_client
	/*v1.POST("/test_forward_game", func(c *gin.Context) {
		allbet.Forward_game(c)
	})*/

	//test_create_client
	v1.POST("/test_logout_game", func(c *gin.Context) {
		allbet.Logout_game(c)
	})

	//test_maintain_state_setting挂维护
	v1.POST("test_maintain_state_setting", func(c *gin.Context) {
		allbet.Maintain_state_setting(c, "1")
	})

	//test_maintain_state_setting开启站点
	v1.POST("test_maintain_state_setting_on", func(c *gin.Context) {
		allbet.Maintain_state_setting(c, "0")
	})

	//30天内一小时内记录
	v1.POST("test_betlog_pieceof_histories_in30days", func(c *gin.Context) {
		allbet.Betlog_pieceof_histories_in30days(c)
	})

	//客户历史输赢
	v1.POST("test_client_history_surplus", func(c *gin.Context) {
		allbet.Client_history_surplus(c)
	})

	//电子游戏投注记录
	v1.POST("test_egame_betlog_histories", func(c *gin.Context) {
		allbet.Egame_betlog_histories(c)
	})

	v1.Use(SignCheck())
	{
		//登录
		v1.POST("/login", func(c *gin.Context) {

			action.UserLogin(c)

		})

		v1.POST("/test", func(c *gin.Context) {
			dd := map[string]string{"hello": "12323", "id": "123284"}
			tt := utils.HttpPost("13223", dd)
			fmt.Println(tt)
		})

		//注册页面渲染信息接口
		v1.POST("/register_page_info", func(c *gin.Context) {
			action.UserRegisterPageInfo(c)
		})
		//注册
		v1.POST("/register", func(c *gin.Context) {
			action.UserRegister(c)
		})

		// 2.VR彩票(暂时不管)
		v1.POST("/game_list", func(c *gin.Context) {
			action.GameList(c)
		})

		//获取游戏种类及下属游戏信息
		v1.POST("/game_type_list", func(c *gin.Context) {
			action.GameTypeList(c)
		})

		//下载地址
		v1.POST("/download_link", func(c *gin.Context) {
			action.MerchantWebsiteAppDownload(c)
		})

		//广告列表
		v1.POST("/advertisement_list", func(c *gin.Context) {
			action.AdvertisementList(c)
		})

		v1.Use(TokenRequired())
		{
			v1.GET("/ping", func(c *gin.Context) {

				c.JSON(200, gin.H{
					"message": "pong",
				})
			})

			//退出登录
			v1.POST("/logout", func(c *gin.Context) {

				action.UserLogout(c)

			})

			v1.POST("/game_login", func(c *gin.Context) {

				action.GameLogin(c)

			})

			/*//真人娱乐
			v1.GET("/man_list", func(c *gin.Context) {
				data := [...]map[string]interface{}{{"id": 1, "url": "http://www.baidu.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 1, "desc": "111"}, {"id": 2, "url": "http://www.baidu2.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 1, "desc": "111"}}
				suc["data"] = data
				suc["msg"] = "获取成功"
				c.JSON(http.StatusOK, suc)
			})

			//彩票游戏
			// 1.彩播
			v1.GET("/color_go_list", func(c *gin.Context) {
				data := [...]map[string]interface{}{{"id": 1, "url": "http://www.baidu.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 2, "desc": "222"}, {"id": 2, "url": "http://www.baidu2.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 2, "desc": "222"}}
				suc["data"] = data
				suc["msg"] = "获取成功"
				c.JSON(http.StatusOK, suc)
			})*/

			/*// 3.BBIN彩票
			v1.GET("/bbin_go_list", func(c *gin.Context) {
				data := [...]map[string]interface{}{{"id": 1, "url": "http://www.baidu.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 4, "desc": "444"}, {"id": 2, "url": "http://www.baidu2.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 4, "desc": "444"}}
				suc["data"] = data
				suc["msg"] = "获取成功"
				c.JSON(http.StatusOK, suc)
			})

			//棋牌游戏
			v1.GET("/chass_list", func(c *gin.Context) {
				data := [...]map[string]interface{}{{"id": 1, "url": "http://www.baidu.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "game_name": "二十一点", "type": 5, "desc": "555"}, {"id": 2, "url": "http://www.baidu2.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "game_name": "火星战绩", "type": 5, "desc": "555"}}
				suc["data"] = data
				suc["msg"] = "获取成功"
				c.JSON(http.StatusOK, suc)
			})

			//电子游戏
			v1.GET("/game_list", func(c *gin.Context) {
				data := [...]map[string]interface{}{{"id": 1, "url": "http://www.baidu.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "game_name": "AG捕鱼王", "type": 6, "desc": "666"}, {"id": 2, "url": "http://www.baidu2.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "game_name": "AG捕鱼王2", "type": 6, "desc": "666"}}
				suc["data"] = data
				suc["msg"] = "获取成功"
				c.JSON(http.StatusOK, suc)
			})

			//体育赛事
			v1.GET("/pe_list", func(c *gin.Context) {
				data := [...]map[string]interface{}{{"id": 1, "url": "http://www.baidu.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "game_name": "沙巴体育", "type": 7, "desc": "超强体育赛事直播"}, {"id": 2, "url": "http://www.baidu2.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "game_name": "沙巴体育2", "type": 7, "desc": "超强体育赛事直播"}}
				suc["data"] = data
				suc["msg"] = "获取成功"
				c.JSON(http.StatusOK, suc)
			})*/

			//优惠活动
			/*v1.GET("/active_list", func(c *gin.Context) {
				data := [...]map[string]interface{}{{"id": 1, "url": "http://www.baidu.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 8, "desc": "888"}, {"id": 2, "url": "http://www.baidu2.com", "cover": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538115150044&di=5436bd6cf7658d869400d439c208112b&imgtype=0&src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fitem%2F201409%2F19%2F20140919234215_RmBdj.png", "type": 8, "desc": "888"}}
				suc["data"] = data
				suc["msg"] = "获取成功"
				c.JSON(http.StatusOK, suc)
			})*/

			//消息中心
			v1.POST("/message_list", func(c *gin.Context) {
				action.MessageList(c)
				//data := [...]map[string]interface{}{{"id": 1, "title": "公司入款支付宝充值通知", "content": "由于极速六合彩言网不稳走，导致平台该彩种开奖结栗异常•现平台决定将对其蜇时停止销售，期间您可以j泡垄其他彩种进行投注•给棘来不便，iEM您谅篇。", "read": 0, "create_time": 1537950180}, {"id": 2, "title": "公司入款支付宝充值通知", "content": "由于极速六合彩言网不稳走，导致平台该彩种开奖结栗异常•现平台决定将对其蜇时停止销售，期间您可以j泡垄其他彩种进行投注•给棘来不便，iEM您谅篇。", "read": 1, "create_time": 1537950180}}
				//res := gin.H{"code": 1, "data": data, "msg": "ok", "total": 10, "next_page": 2}
				//c.JSON(http.StatusOK, res)
			})

			//改变消息状态为已读
			v1.POST("/change_message_status", func(c *gin.Context) {
				action.MessageRead(c)
			})

			//设置邮箱
			v1.POST("/bind_email", func(c *gin.Context) {
				action.UserBindEmail(c)
			})

			//设置QQ
			v1.POST("/bind_qq", func(c *gin.Context) {
				action.UserBindQQ(c)
			})

			//设置QQ
			v1.POST("/bind_phone", func(c *gin.Context) {
				action.UserBindPhone(c)
			})

			//设置收货地址
			v1.POST("/bind_recipient_address", func(c *gin.Context) {
				data := [...]map[string]interface{}{}
				suc["data"] = data
				c.JSON(http.StatusOK, suc)
			})

			//重置密码
			v1.POST("/reset_password", func(c *gin.Context) {
				action.ResetPass(c)
			})

			//获取密保问题
			v1.POST("/get_securitys", func(c *gin.Context) {
				action.UserGetSecurity(c)
			})

			//设置密保问题
			v1.POST("/set_security", func(c *gin.Context) {
				data := [...]map[string]interface{}{}
				suc["data"] = data
				c.JSON(http.StatusOK, suc)
			})

			v1.POST("/base_info", func(c *gin.Context) {
				/*user_id := c.PostForm("user_id")
				data := map[string]string{"user_id": user_id, "user_name": "张天", "phone": "18270717411", "balance": "22.00", "withdraw_balance": "21.00", "last_login_time": "1539499155"}
				suc["data"] = data
				c.JSON(http.StatusOK, suc)*/
				action.UserBaseInfo(c)
			})

			v1.POST("/game_account_list", func(c *gin.Context) {
				action.AccountList(c)
			})

			v1.POST("/game_account_info", func(c *gin.Context) {
				action.AccountInfo(c)
			})

			//支付类型列表
			v1.POST("/paytype_list", func(c *gin.Context) {
				action.PayTypetList(c)
				//merchant_id := c.PostForm("merchant_id")
				/*data1 := [...]map[string]interface{}{
					{"id": "1", "channel": "通道一", "pay_tag": "1", "account": "", "qrcode": "", "simple_min": "100", "simple_max": "2000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
					{"id": "2", "channel": "通道二", "pay_tag": "1", "account": "", "qrcode": "", "simple_min": "200", "simple_max": "3000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
				}
				data2 := [...]map[string]interface{}{
					{"id": "3", "channel": "通道一", "pay_tag": "1", "account": "", "qrcode": "", "simple_min": "100", "simple_max": "2000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
					{"id": "4", "channel": "通道二", "pay_tag": "1", "account": "", "qrcode": "", "simple_min": "200", "simple_max": "3000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
				}
				data3 := [...]map[string]interface{}{
					{"id": "5", "channel": "", "pay_tag": "2", "account": "1111111111121212", "qrcode": "", "simple_min": "100", "simple_max": "2000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
					{"id": "6", "channel": "", "pay_tag": "2", "account": "1111111111121212", "qrcode": "", "simple_min": "200", "simple_max": "3000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
				}
				data4 := [...]map[string]interface{}{
					{"id": "7", "channel": "", "pay_tag": "3", "account": "", "qrcode": "dfdfd.jpg", "simple_min": "100", "simple_max": "2000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
					{"id": "8", "channel": "", "pay_tag": "3", "account": "", "qrcode": "dfdfd.jpg", "simple_min": "200", "simple_max": "3000", "day_stop_max": "100000", "fee_rate": "1", "status": 1},
				}
				list1 := map[string]interface{}{}
				list2 := map[string]interface{}{}
				list3 := map[string]interface{}{}
				list4 := map[string]interface{}{}
				list1["list"] = data1
				list1["name"] = "wechat"
				list2["list"] = data2
				list2["name"] = "zfb"
				list3["list"] = data3
				list3["name"] = "yhzz"
				list4["list"] = data4
				list4["name"] = "wxsm"
				data := [...]map[string]interface{}{
					list1, list2, list3, list4,
				}
				suc["data"] = data
				c.JSON(http.StatusOK, suc)*/
			})

			v1.POST("/user_bank", func(c *gin.Context) {
				action.UserBankList(c)
			})

			//账户统计
			v1.POST("/account_total", func(c *gin.Context) {
				action.BillTotal(c)
			})

			//资金明细
			v1.POST("/account_bill", func(c *gin.Context) {
				//user_id := c.PostForm("user_id")
				action.UserBillList(c)
			})

			//游戏报表
			v1.POST("/game_report", func(c *gin.Context) {
				action.AccountReport(c)
			})

			//会员打赏小费
			v1.POST("/game_reward", func(c *gin.Context) {
				action.AccountReward(c)
			})

			//申请提现
			v1.POST("/withdraw", func(c *gin.Context) {
				action.ApplayWithdraw(c)
			})

			//账户转移资金
			v1.POST("/account_trans", func(c *gin.Context) {
				//user_id := c.PostForm("user_id")
				action.AccountTrans(c)
			})

			//账号信息页面数据
			v1.POST("/account_info", func(c *gin.Context) {
				action.UserInfo(c)
			})

			//签到
			v1.POST("/sign", func(c *gin.Context) {
				data := [...]map[string]interface{}{}
				suc["data"] = data
				c.JSON(http.StatusOK, suc)
			})

			//充值
			v1.POST("/pay", func(c *gin.Context) {
				action.Recharge(c)
				//id := c.PostForm("id")
				/*suc := gin.H{"code": "1", "msg": "ok"}
				pay_tag := c.PostForm("pay_tag")
				if pay_tag == "1" {
					suc["pay_tag"] = pay_tag
					suc["redirect"] = "www.baidu.com"
				}
				c.JSON(http.StatusOK, suc)*/
			})

		}
	}

	v2 := r.Group("/v2")
	v2.Use(TokenRequired())
	{
		v2.GET("/ping", func(c *gin.Context) {

			c.JSON(200, gin.H{
				"message": "pong2",
			})
		})
	}

	return r
}
