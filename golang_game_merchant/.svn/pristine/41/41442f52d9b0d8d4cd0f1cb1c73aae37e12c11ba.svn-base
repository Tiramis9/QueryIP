package action

import (
	"fmt"
	"github.com/gin-gonic/gin"
	"golang_game_merchant/global/status"
	"golang_game_merchant/model"
	"time"
)

type MerchantAgentClassReq struct {
	Id            int     `json:"id" binding:"required"`
	ClassName     string  `json:"class_name"`
	Mode          int     `json:"mode"`
	FdSport       int     `json:"fd_sport"`
	FdLottery     int     `json:"fd_lottery"`
	FdPeople      int     `json:"fd_people"`
	FdChess       int     `json:"fd_chess"`
	FdBetUser     int     `json:"fd_bet_user"`
	FdBetBill     float64 `json:"fd_bet_bill"`
	BonusCutRate  int     `json:"bonus_cut_rate"`
	RebackCutRate int     `json:"reback_cut_rate"`
	FcTeamProfit  float64 `json:"fc_team_profit"`
	FcSport       int     `json:"fc_sport"`
	FcLottery     int     `json:"fc_lottery"`
	FcPeople      int     `json:"fc_people"`
	FcChess       int     `json:"fc_chess"`
	FcBetUser     int     `json:"fc_bet_user"`
	FcBetBill     float64 `json:"fc_bet_bill"`
	SpreadAward   float64 `json:"spread_award"`
	CreateTime    int     `json:"create_time"`
	UpdateTime    int     `json:"update_time"`
}

type MerchantAgentClass struct {
	Id        int    `json:"id"`
	ClassName string `json:"class_name"`
}

type MerchantAgentClassListResp struct {
	List []MerchantAgentClass `json:"list"`
}

/**
代理层级列表
*/
func AgentClassList(c *gin.Context) {
	var data MerchantAgentClassListResp
	merchantId := 1
	list, err := model.GetMerchantAgentClassList(model.Db, merchantId)
	if err != nil {
		RespServerErr(c)
		return
	}
	for i := range list {
		temp := MerchantAgentClass{
			Id:        list[i].Id,
			ClassName: list[i].ClassName,
		}
		data.List = append(data.List, temp)
	}
	RespJson(c, status.OK, data)
}

/**
代理层级详情
*/
func AgentClassInfo(c *gin.Context) {
	var macReq MerchantAgentClassReq
	c.BindJSON(&macReq)
	merchantId := 1
	info, err := model.GetMerchantAgentClassInfo(model.Db, merchantId, macReq.Id)
	if err != nil {
		RespServerErr(c)
		return
	}
	RespJson(c, status.OK, info)
}

/**
代理层级编辑
*/
func AgentClassEdit(c *gin.Context) {
	var macReq MerchantAgentClassReq
	var mac model.MerchantAgentClass
	fields := make(map[string]interface{})
	c.BindJSON(&macReq)
	merchantId := 1
	mac.Id = macReq.Id
	timestamp := time.Now().Unix()
	fields["class_name"] = macReq.ClassName
	fields["mode"] = macReq.Mode
	fields["fd_sport"] = macReq.FdSport
	fields["fd_lottery"] = macReq.FdLottery
	fields["fd_people"] = macReq.FdPeople
	fields["fd_chess"] = macReq.FdChess
	fields["fd_bet_user"] = macReq.FdBetUser
	fields["fd_bet_bill"] = macReq.FdBetBill
	fields["bonus_cut_rate"] = macReq.BonusCutRate
	fields["reback_cut_rate"] = macReq.RebackCutRate
	fields["fc_team_profit"] = macReq.FcTeamProfit
	fields["fc_sport"] = macReq.FcSport
	fields["fc_lottery"] = macReq.FcLottery
	fields["fc_people"] = macReq.FcPeople
	fields["fc_chess"] = macReq.FcChess
	fields["fc_bet_user"] = macReq.FcBetUser
	fields["fc_bet_bill"] = macReq.FcBetBill
	fields["spread_award"] = macReq.SpreadAward
	fields["create_time"], fields["update_time"] = timestamp, timestamp
	fmt.Println(fields)
	_, err := mac.UpdateMerchantAgentClass(model.Db, merchantId, fields)
	if err != nil {
		RespServerErr(c)
		return
	}
	RespSuccess(c)
}

/**
代理层级删除
*/
func AgentClassDel(c *gin.Context) {
	var macReq MerchantAgentClassReq
	var mac model.MerchantAgentClass
	c.BindJSON(&macReq)
	mac.Id = macReq.Id
	merchantId := 1
	info, err := mac.DelMerchantAgentClass(model.Db, merchantId)
	if err != nil {
		RespServerErr(c)
		return
	}
	RespJson(c, status.OK, info)
}
