package redisclient

import (
	"log"

	"github.com/Unknwon/goconfig"
	redigo "github.com/gomodule/redigo/redis"
)

var pool *redigo.Pool

func init() {
	//读取配置文件

	cfg, err := goconfig.LoadConfigFile("./config/dev.ini")
	if err != nil {
		log.Println("读取配置文件失败[dev.ini]")
		return
	}
	redis_type, err := cfg.GetValue("redis", "type")
	if err != nil {
		log.Fatalf("无法获取键值（%s）：%s", "type", err)
		return
	}

	redis_conf, err := cfg.GetValue("redis", "connect")
	if err != nil {
		log.Fatalf("无法获取键值（%s）：%s", "connect", err)
		return
	}

	redis_pass, err := cfg.GetValue("redis", "password")
	if err != nil {
		log.Fatalf("无法获取键值（%s）：%s", "password", err)
		return
	}

	pool_size := 20
	pool = redigo.NewPool(func() (redigo.Conn, error) {
		c, err := redigo.Dial(redis_type, redis_conf)
		if err != nil {
			return nil, err
		}
		_, err2 := c.Do("AUTH", redis_pass)
		if err2 != nil {
			return nil, err2
		}
		return c, nil
	}, pool_size)
}

func Get() redigo.Conn {
	return pool.Get()
}
