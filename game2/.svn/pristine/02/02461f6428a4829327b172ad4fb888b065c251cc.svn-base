package action

import (
	"game2/service/crontab"

	"github.com/gin-gonic/gin"
	"github.com/sirupsen/logrus"
)

type GameRecordReq struct {
	GameCode  string `json:"game_code" binding:"required"`
	StartTime string `json:"start_time"`
	EndTime   string `json:"end_time"`
}

func GameRecord(c *gin.Context) {
	var record GameRecordReq
	if err := c.BindJSON(&record); err != nil {
		RespParamErr(c)
		return
	}
	if record.StartTime == "" {
		RespParamErr(c)
		return
	}
	if record.EndTime == "" {
		RespParamErr(c)
		return
	}
	info := make(map[string]interface{})
	info["start_time"] = record.StartTime
	info["end_time"] = record.EndTime
	_, err := crontab.GameRecord(record.GameCode, info)
	if err != nil {
		logrus.Error(err)
		RespServerErr(c)
		return
	}
	RespSuccess(c)
}
