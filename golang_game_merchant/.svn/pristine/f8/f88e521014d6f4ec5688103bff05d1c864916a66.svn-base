package model

import "github.com/jinzhu/gorm"

type MerchantAgentClass struct {
	Id            int     `json:"id"`
	ClassName     string  `json:"class_name"`
	Mode          int     `json:"mode"`
	FdSport       int     `json:"fd_sport"`
	FdLottry      int     `json:"fd_lottry"`
	FdPeople      int     `json:"fd_people"`
	FdChess       int     `json:"fd_chess"`
	FdBetUser     int     `json:"fd_bet_user"`
	FdBetBill     float64 `json:"fd_bet_bill"`
	BonusCutRate  int     `json:"bonus_cut_rate"`
	RebackCutRate int     `json:"reback_cut_rate"`
	FcTeamProfit  float64 `json:"fc_team_profit"`
	FcSport       int     `json:"fc_sport"`
	FcLottry      int     `json:"fc_lottry"`
	FcPeople      int     `json:"fc_people"`
	FcChess       int     `json:"fc_chess"`
	FcBetUser     int     `json:"fc_bet_user"`
	FcBetBill     float64 `json:"fc_bet_bill"`
	SpreadAward   float64 `json:"spread_award"`
	CreateTime    int     `json:"create_time"`
	UpdateTime    int     `json:"update_time"`
}

/**
获取代理层级列表
*/
func GetMerchantAgentClassList(db *gorm.DB, merchId int) ([]MerchantAgentClass, error) {
	var agentclassList []MerchantAgentClass
	if err := db.Table("merchant_agent_class").Select("id, class_name").Find(&agentclassList, map[string]interface{}{"merchant_id": merchId}).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return nil, nil
		}
		return nil, err
	}
	return agentclassList, nil
}

/**
获取代理层级详情
*/
func GetMerchantAgentClassInfo(db *gorm.DB, classId int) (MerchantAgentClass, error) {
	var agentclass MerchantAgentClass
	if err := db.First(&agentclass, map[string]interface{}{"merchant_id": classId}).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return agentclass, nil
		}
		return agentclass, err
	}
	return agentclass, nil
}

/**
编辑代理层级信息
*/
func (m MerchantAgentClass) UpdateMerchantAgentClass(db *gorm.DB, fields map[string]interface{}) (bool, error) {
	if err := db.Model(&m).Updates(fields).Error; err != nil {
		return false, err
	}
	return true, nil
}

/**
删除代理层级信息
*/
func (m MerchantAgentClass) DelMerchantAgentClass(db *gorm.DB) (bool, error) {
	if err := db.Delete(&m).Error; err != nil {
		return false, err
	}
	return true, nil
}
