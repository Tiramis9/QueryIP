package action

import (
	"golang_game_merchant/model"
	"net/http"

	"github.com/gin-gonic/gin"
	"github.com/sirupsen/logrus"
)

func QueryMemberRegistration(c *gin.Context) {
	merchantID := 1
	resp, err := model.QueryMemberRegistration(merchantID)
	if err != nil {
		logrus.Errorf("model.QueryMemberRegistration(), %v", err)
		RespServerErr(c)
		return
	}

	res := gin.H{"code": 1, "data": resp, "msg": "ok"}
	c.JSON(http.StatusOK, res)
}

func ModifyMemberRegistration(c *gin.Context) {
	var req model.MemberRegistration
	if err := c.Bind(&req); err != nil {
		logrus.Errorf("ModifyMemberRegistration,c.Bind(),%v", err)
		RespParamErr(c)
		return
	}

	for field, value := range map[string]int{"RegEmail": req.RegEmail,
		"RegPayPass":          req.RegPayPass,
		"RegPhone":            req.RegPhone,
		"RegSecurityQuestion": req.RegSecurityQuestion,
		"RegTrueName":         req.RegTrueName} {
		if value < 1 || value > 3 {
			logrus.Errorf("invalid arguments, action.ModifyMemberRegistration(),invalid value of '%s'", field)
			RespParamErr(c)
			return
		}
	}

	merchantID := 1
	err := model.ModifyMemberRegistration(&req, merchantID)
	if err != nil {
		logrus.Errorf(" model.ModifyMemberRegistration(), %v", err)
		RespParamErr(c)
		return
	}

	res := gin.H{"code": 1, "data": nil, "msg": "ok"}
	c.JSON(http.StatusOK, res)
}
