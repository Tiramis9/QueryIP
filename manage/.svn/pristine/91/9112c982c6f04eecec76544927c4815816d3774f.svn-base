package action

import (
	"errors"
	"fmt"
	"golang_game_merchant/global/status"
	"golang_game_merchant/model"
	"net/http"

	"github.com/gin-gonic/gin"
)

/**********************************
//http://xx.com/v1/global_report
new_register	int	新注册会员 .
recharge_member	int	充值会员 .
recharge_amount	int	充值 .
withdraw_amount	int	提现 .
rebate	int	反水 .
bonus_amount	int	红利 .

effective_bet	int	有效投注
win_lost_amount	int	总输赢
effective_member	int	有效会员
win_rate	int	胜率
win	int	输赢结果
tips_list	string	打赏小费列表
tips_num	int	打赏数额
game_name	string	游戏名或者直播名
game_active_list	string	游戏活动列表
award	int	派奖总金额
pool	int	奖池贡献金
******************************/
type (
	ReportRequst struct {
		Begintime string `json:"start_time"` // 开始时间
		Endtime   string `json:"end_time"`   // 结束时间
	}
	ReportInfo struct {
		New_register    interface{} `json:"new_register"`    // 新注册会员 .
		Bonus_amount    interface{} `json:"bonus_amount"`    // 红利 ..
		Rebate          interface{} `json:"rebate"`          // 反水 .
		Recharge_amount interface{} `json:"recharge_amount"` // 充值金额 .
		Recharge_member interface{} `json:"recharge_member"` // 充值会员 .
		Withdraw_amount interface{} `json:"withdraw_amount"` // 提现 .
		/**********************待完成*********************************/
		Effective_bet    interface{} `json:"effective_bet"` // 有效投注
		Win              interface{} `json:"win"`           // 输赢结果
		Win_lost_amount  interface{} `json:"win_lost_amount"`
		Game_active_list interface{} `json:"game_active_list"`
		Game_name        interface{} `json:"game_name"`
		Effective_member interface{} `json:"effective_member"`
		Win_rate         interface{} `json:"win_rate"`
		Tips_list        interface{} `json:"tips_list"`
		Tips_num         interface{} `json:"tips_num"`
		Award            interface{} `json:"award"`
		Pool             interface{} `json:"pool"`
	}
	ReportResponse struct {
		List ReportInfo `json:"data"`
	}
)

func globalReportCheck(repost *ReportRequst) (map[string]int, error) {
	msg := make(map[string]int)
	if repost.Endtime == "" || repost.Begintime == "" {
		return nil, errors.New("requst time of invaild")
	}
	begin_date := model.StringtoInt(repost.Begintime)
	end_date := model.StringtoInt(repost.Endtime)
	msg["start_time"] = begin_date
	msg["end_time"] = end_date
	return msg, nil
}
func GlobalReport(c *gin.Context) {
	fmt.Println("welcome to GlobalReport")
	var requst ReportRequst
	if err := c.Bind(&requst); err != nil {
		RespParamErr(c)
		return
	}
	// 参数入参检查
	msg, err := globalReportCheck(&requst)
	if err != nil {
		RespParamErr(c)
		return
	}
	dataList, err := model.GetMerchantAnnouncement(model.Db, msg)
	if err != nil {
		RespServerErr(c)
		return
	}
	resp := new(ReportResponse)
	resp.List.New_register = dataList.New_register
	resp.List.Bonus_amount = dataList.Bonus_amount
	resp.List.Rebate = dataList.Rebate
	resp.List.Recharge_amount = dataList.Recharge_amount
	resp.List.Recharge_member = dataList.Recharge_member
	resp.List.Withdraw_amount = dataList.Withdraw_amount
	RespJson(c, status.OK, resp)
	/*

		data1 := [...]map[string]interface{}{
			{"game_name": "沙巴体育", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
			{"game_name": "BB体育", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
			{"game_name": "NEW BB体育", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
		}
		data2 := [...]map[string]interface{}{
			{"game_name": "BBIN彩票", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
			{"game_name": "VR彩票", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
		}
		data3 := [...]map[string]interface{}{
			{"game_name": "AG国际厅", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
			{"game_name": "DG视讯", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
			{"game_name": "欧博视讯", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
		}
		data4 := [...]map[string]interface{}{
			{"game_name": "开元棋牌", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
		}
		data5 := [...]map[string]interface{}{
			{"game_name": "捕鱼达人", "effective_member": "1", "effective_bet": "500.00", "win": "-500.00", "win_rate": "-100.00%"},
		}

		data_all := map[string]interface{}{}
		data := map[string]interface{}{}
		data["sport"] = data1
		data["lottery"] = data2
		data["real"] = data3
		data["chess"] = data4
		data["game"] = data5
		data_all["new_register"] = 200
		data_all["recharge_member"] = 200
		data_all["effective_bet"] = 2634.69
		data_all["win_lost_amount"] = -200
		data_all["recharge_amount"] = 200
		data_all["withdraw_amount"] = 200
		data_all["bonus_amount"] = 200 //红利
		data_all["rebate"] = 200       //反水
		data_all["data"] = data
		suc["data"] = data_all

		c.JSON(http.StatusOK, suc)
	*/
}

func FinanceList(c *gin.Context) {
	data_all := map[string]interface{}{}
	datas := [...]map[string]interface{}{{"id": 1, "user_name": "aaabc", "true_name": "大娃", "effective_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6}, {"id": 2, "user_name": "cccbc", "true_name": "二娃", "effective_bet": 2000, "win_lost_amount": 987, "recharge_amount": 954616, "withdraw_amount": 4897, "bonus_amount": 2000, "rebate": 15, "fee": 6}}
	data_all["data"] = datas
	data_all["members"] = 10
	data_all["effective_bet"] = 2000
	data_all["win_lost_amount"] = 500
	data_all["recharge_amount"] = 500
	data_all["bonus_amount"] = 500
	data_all["rebate"] = 500
	data_all["fee"] = 0
	res := gin.H{"code": 1, "data": data_all, "msg": "ok", "total": 10, "next_page": 2}
	c.JSON(http.StatusOK, res)
}
